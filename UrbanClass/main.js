/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var roi = 
    /* color: #ffc82d */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-123.41054055342455, 41.346599408357],
          [-123.41054055342455, 40.072492956391045],
          [-120.99904152998705, 40.072492956391045],
          [-120.99904152998705, 41.346599408357]]], null, false),
    lightVeg = 
    /* color: #bf04c2 */
    /* shown: false */
    ee.Geometry.MultiPoint(
        [[-122.42628745863259, 40.74645370515119],
         [-122.42671661207497, 40.74645370515119],
         [-122.42993526289284, 40.74513691983109],
         [-122.42995672056496, 40.74570590434116],
         [-122.42957048246681, 40.74565713443102],
         [-122.43315391371071, 40.74612857539742],
         [-122.43313245603859, 40.74703893470238],
         [-122.43311099836647, 40.74777046439907],
         [-122.43276767561257, 40.74814435424763],
         [-122.43240289518654, 40.74807933007715],
         [-122.43023567030251, 40.74812809821096],
         [-122.42671661207497, 40.74594975335528],
         [-122.42633037397682, 40.74560836448515]]),
    heavyVeg = 
    /* color: #ff0000 */
    /* shown: false */
    ee.Geometry.MultiPoint(
        [[-122.42457084486306, 40.74705519100528],
         [-122.42491416761696, 40.74702267839551],
         [-122.42454938719094, 40.74671380780976],
         [-122.4234979612571, 40.74775420827102],
         [-122.47028873475941, 40.754573182577275],
         [-122.47028873475941, 40.75438625598979],
         [-122.47026727708729, 40.75407741960683],
         [-122.47031019243153, 40.75378483644704],
         [-122.47028873475941, 40.75355727087701],
         [-122.47029946359547, 40.753337831911104],
         [-122.47059987100513, 40.75340285093947],
         [-122.47058914216908, 40.75368730844096],
         [-122.47064278634937, 40.754012401238164],
         [-122.47065351518543, 40.754256219792886],
         [-122.47066424402149, 40.7545894370383],
         [-122.47104012303134, 40.74967101152789],
         [-122.47035347752353, 40.75104460073474],
         [-122.4703105621793, 40.75066259948409],
         [-122.47047149472019, 40.75090643032294],
         [-122.47355067066928, 40.74933776963277],
         [-122.4732288055875, 40.74911831674104],
         [-122.47290694050571, 40.749150828326265]]),
    water = 
    /* color: #1d1fff */
    /* shown: false */
    ee.Geometry.MultiPoint(
        [[-122.40856116353235, 40.74689185547207],
         [-122.40813201008997, 40.74703816237874],
         [-122.40800326405726, 40.74746895306809],
         [-122.40739172040186, 40.74768841140297],
         [-122.40719860135279, 40.74725762213522],
         [-122.40683382092676, 40.74750959355512],
         [-122.4068230920907, 40.74676993280396],
         [-122.4070376688119, 40.74612780306318],
         [-122.4077779585, 40.74593272444568],
         [-122.41112535535059, 40.74621721390496],
         [-122.41048162518702, 40.746908111810924],
         [-122.409398012745, 40.746656138112044],
         [-122.40935509740076, 40.74712757199657],
         [-122.40718787251673, 40.745802671716106],
         [-122.40460222302637, 40.747891612919105],
         [-122.40469878255091, 40.747314518990926],
         [-122.40506356297693, 40.74707880312902],
         [-122.40493481694422, 40.74659924069305],
         [-122.4055249029275, 40.746802445537305]]),
    bare = 
    /* color: #ff12b0 */
    /* shown: false */
    ee.Geometry.MultiPoint(
        [[-122.62277699851805, 40.56099418772304],
         [-122.6231632366162, 40.56100233857126],
         [-122.62316860103422, 40.56083117054989],
         [-122.62315250778013, 40.56055811589553],
         [-122.6236513986569, 40.560541814089895],
         [-122.6239196195584, 40.560541814089895]]),
    urban = 
    /* color: #999900 */
    /* shown: false */
    ee.Geometry.MultiPoint(
        [[-122.39079102815307, 40.5837783786562],
         [-122.39089831651367, 40.583574676500575],
         [-122.39060863794006, 40.58274356527662],
         [-122.39055499375976, 40.58252356351816],
         [-122.39045843423523, 40.58304504799264],
         [-122.39053353608764, 40.58405541259229],
         [-122.39089831651367, 40.5840880047446],
         [-122.39122018159546, 40.58409615278022],
         [-122.39008292497314, 40.583786526729526],
         [-122.39046916307129, 40.58349319546464],
         [-122.39046916307129, 40.583786526729526],
         [-122.3902009421698, 40.58353393599503],
         [-122.39017948449768, 40.58299615899586],
         [-122.39017948449768, 40.58276800987178],
         [-122.39017948449768, 40.58251541529099]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var a = require('users/tonywangs/GEOG481:UrbanClass/ImportImage.js');
var label = 'landcover'
var year = 1995;
var sDate = year.toString()
var newfc = ee.FeatureCollection([
  ee.Feature(heavyVeg, {'class': 0}),
  ee.Feature(lightVeg, {'class': 1}),
  ee.Feature(water, {'class': 2}),
  ee.Feature(bare, {'class': 3}),
  ee.Feature(urban, {'class': 4})
]);

var result = a.importImage('2009-05-01', '2009-08-31', roi)

/*------------------------------------------------------------------------------
                             Start Training 
-------------------------------------------------------------------------------*/
// Select the bands for training
var bands = ['B4', 'B3', 'B2', 'B5', 'B6', 'B7'];


// Sample the input imagery to get a FeatureCollection of training data.
var training = result.select(bands).sampleRegions({
  collection: newfc,
  properties: ['class'],
  scale: 30
});

// Train a CART classifier with default parameters.
var trained = ee.Classifier.randomForest().train(training, 'class', bands);

/* Make a Random Forest classifier and train it.
var classifier = ee.Classifier.randomForest().train({
  features: training,
  classProperty: 'landcover',
  inputProperties: bands
});*/

//Initiate loop start for next x amount of images
/*------------------------------------------------------------------------------
            Start of image loading >> classified image loading
-------------------------------------------------------------------------------*/
var result = a.importImage('2009-05-01', '2009-08-31', roi)
Map.addLayer(result, {bands: ['B4', 'B3', 'B2'], gamma: 2.2});


// Classify the image with the same bands used for training.
var classified = result.select(bands).classify(trained);

// Define a palette for the Land Use classification.
var palette = [
  '01380A', // heavy veg
  '07DB29', // light veg
  '0000FF', // water 
  '735005', // bare
  'a3a3a3', // urban 
];

// Display the classification result and the input image.
Map.addLayer(classified, {min: 0, max: 2, palette: palette}, 'Land Use Classification');


// little test for git
